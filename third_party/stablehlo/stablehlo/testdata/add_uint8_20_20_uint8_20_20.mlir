// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<20x20xui8> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.add %0#0, %0#1 : tensor<20x20xui8>
    stablehlo.custom_call @check.expect_eq(%2, %1) {has_side_effect = true} : (tensor<20x20xui8>, tensor<20x20xui8>) -> ()
    return %2 : tensor<20x20xui8>
  }
  func.func private @inputs() -> (tensor<20x20xui8> {mhlo.layout_mode = "default"}, tensor<20x20xui8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<20x20xui8>
    %c_0 = stablehlo.constant dense<"0x02010103000001000404070102040501010404000403010700040400000101050202000001020003010102000106040002030405030101050204050804010200010600010002060203010002040001020201020000040200040003000200000200000201000400010604030302010104000200020102030205020200040001030205030101040101000002020302000401000002010105010000000704000002000202000202020001010302000301030300010305010401000100020100000102000100020002000203010502020002010201040000010201020203000400030203010400000103000302000103010000020206040004080001020004050300030302010102010200020002030302030102050101010400010402000000020204030108000301020000000101020401000101020400010200000200000001010200010100000100010001090102000003000005000701060102020203000003020503010300000104060103000105000500000401030305000104060201020302000203000603010001010100000201"> : tensor<20x20xui8>
    return %c, %c_0 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> (tensor<20x20xui8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0x0501020702000300070508020505070107040401070504090504080402070105050200010103040602020403010B0A03030B0806030501080605090904050302020700010107090606020003060104020601080401060301040004050502010201020301020706010A05040502050405030204030204050406040502050001030605050404070402000102060402020703000105010207040400020905020203030507030605020203090402010A050304010203080505020102010404000401040201000305080504030106050300050404050405000603060307080304030402050204000201040204030001030401070203090502050A000107020406040007030406010403030106020208030303030406010502040003090400010203020903030905060403030301010602070A0502050605000208000305040202020202000104020201030502040A0404000005000106040802060203040604010307060604070800000207080503040306030701000602090306000204070201020704000804020603020001010604030404"> : tensor<20x20xui8>
    return %c : tensor<20x20xui8>
  }
}
