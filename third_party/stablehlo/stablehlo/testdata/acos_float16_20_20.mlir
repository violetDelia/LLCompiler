// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<20x20xf16> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0 = call @inputs() : () -> tensor<20x20xf16>
    %1 = call @expected() : () -> tensor<20x20xf16>
    %cst = stablehlo.constant dense<-1.000000e+00> : tensor<f16>
    %2 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f16>) -> tensor<20x20xf16>
    %3 = stablehlo.compare  NE, %0, %2,  FLOAT : (tensor<20x20xf16>, tensor<20x20xf16>) -> tensor<20x20xi1>
    %4 = stablehlo.multiply %0, %0 : tensor<20x20xf16>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f16>
    %5 = stablehlo.broadcast_in_dim %cst_0, dims = [] : (tensor<f16>) -> tensor<20x20xf16>
    %6 = stablehlo.subtract %5, %4 : tensor<20x20xf16>
    %7 = stablehlo.sqrt %6 : tensor<20x20xf16>
    %cst_1 = stablehlo.constant dense<1.000000e+00> : tensor<f16>
    %8 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f16>) -> tensor<20x20xf16>
    %9 = stablehlo.add %8, %0 : tensor<20x20xf16>
    %10 = stablehlo.atan2 %7, %9 : tensor<20x20xf16>
    %cst_2 = stablehlo.constant dense<2.000000e+00> : tensor<f16>
    %11 = stablehlo.broadcast_in_dim %cst_2, dims = [] : (tensor<f16>) -> tensor<20x20xf16>
    %12 = stablehlo.multiply %11, %10 : tensor<20x20xf16>
    %cst_3 = stablehlo.constant dense<3.140630e+00> : tensor<f16>
    %13 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f16>) -> tensor<20x20xf16>
    %14 = stablehlo.select %3, %12, %13 : tensor<20x20xi1>, tensor<20x20xf16>
    stablehlo.custom_call @check.expect_close(%14, %1) {has_side_effect = true} : (tensor<20x20xf16>, tensor<20x20xf16>) -> ()
    return %14 : tensor<20x20xf16>
  }
  func.func private @inputs() -> (tensor<20x20xf16> {mhlo.layout_mode = "default"}) {
    %cst = stablehlo.constant dense<"0x80C2403A9E453AC30E440DBCDB41693F69BF273CA0BC74C2FB3309409F44A9C2E33C2434023FC143944064BD4FC06B3CBB45F5C25B41AB41173CA3C229401DC661BBD93BDD412A43AFC4B44545C000BFE63F2A40BAC36EC2D6400640F9B5D53B15C14FB612C3E3C03DC1DBB4C83F6F431A39723D13C249C663B9283EA3BE9C3DE6C043BFF53F5EC401452942ACB4A03358BC7AB62736D03E87C3183C02C2414560C299B629394141F9C1EAC0B13DFD45BDC2074397C3653FCC3DE4C72C43ACC2B9C6AB2DA43B033F71C40ABFA045E4AE36404C3CA7C3CB344642C2C0A54022C0E53235380CC0BB3210BF19BE81BE7A3B07BC11BF25BF21407C444EBC87C1B43E84C04441793BC2BAC140D133B63ED4BC01BC694286C4E33DB531EFBDD6C01CC329419DA8744009BE27433DB7CF3CE33EE7BE403E1EC467BD66BEB3C02CBC4F444F37543A8A398A41DD44114462B8AAC0CF3E37BE5DBBF6C2233F543A244490BE98C00BBDB9C1C1428D4453C3083D89C224B8713C232DD44104B8CCC02AC089347B3D103A89B033BEDF438A3C47BBB4408C3F28C0B3436A433BB90941BB4196A93441A0C40443FCBC85BCF442454091C33A3A86C4F33C4131AEC03BBCD7BEF23CFEC4EB402EC1BE373B41FD3F0CBC2C40453D4534374663BD453CBB4005433942CB40BB3B73BE9841FE3F3CC165BE023E02C509BCF83541B98C409CC413408331E7C69EC13B40B743E5B51EBEE04442C114375A467BC5CD39E841D1413AC10F3998BB1C38883DB23EFAC45FBC80B9974439386BBC53B37A404EBC00BD6CB96A43D5C0C6440E3D8D4218415BBB1EBF004002C4BD4541C45A3CAEC031434DBE753FA7C4363A6E44D5B6F043C33F90434FC40EC141C2B8BD44BA4AC0A9C4F63BEDBF984460452C3E8938DC40C5412C40EC3C4FC54B4147BF7A3F88BC48BFF3C18E3FF1418744C43F763D9D48773A27C2C9445D359F3C59427B3DEFC54C4093BA84C60BC7ED405F4457C03431CD3EE73A9EC038C1C542B6BA6342A740313EABC294BC6CBC3DBEA530104434C0F7BFE7BEA6BEE9C08AC31448E5AE3FC872BCAEB8CF43C3BAECB4EEBFA43DC0BE00C49645FF3C6B390B31A6C2133C163290C0423C47BF"> : tensor<20x20xf16>
    return %cst : tensor<20x20xf16>
  }
  func.func private @expected() -> (tensor<20x20xf16> {mhlo.layout_mode = "default"}) {
    %cst = stablehlo.constant dense<"0xtensor<20x20xf16>
    return %cst : tensor<20x20xf16>
  }
}
