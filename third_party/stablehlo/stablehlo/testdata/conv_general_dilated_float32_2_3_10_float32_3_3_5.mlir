// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<2x3x6xf32> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0:2 = call @inputs() : () -> (tensor<2x3x10xf32>, tensor<3x3x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0]x[o, i, 0]->[b, f, 0], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x10xf32>, tensor<3x3x5xf32>) -> tensor<2x3x6xf32>
    stablehlo.custom_call @check.expect_almost_eq(%2, %1) {has_side_effect = true} : (tensor<2x3x6xf32>, tensor<2x3x6xf32>) -> ()
    return %2 : tensor<2x3x6xf32>
  }
  func.func private @inputs() -> (tensor<2x3x10xf32> {mhlo.layout_mode = "default"}, tensor<3x3x5xf32> {mhlo.layout_mode = "default"}) {
    %cst = stablehlo.constant dense<[[[-0.271320641, -0.758173942, -3.0020709, -1.41074312, -2.59247255, 2.24548292, 4.80079126, -4.46832132, -3.73511291, -0.853675901], [-0.419305712, 0.756389439, 0.28815797, -0.541456521, 1.94459546, 4.18330812, -1.84070265, -1.771106, 0.673749744, -4.021800e+00], [0.61333698, -0.941978216, 1.3274101, 2.90333152, 0.99460107, -6.05293131, -1.17299044, -1.2425369, 0.884842991, 3.76954436]], [[-1.1226275, 0.846095324, -3.46591806, 0.0529579371, 2.57086372, -3.53225708, -0.493399411, -2.80988026, 8.53120422, -0.416747719], [-0.895873844, -0.255519629, -1.34586382, -3.74175882, -0.691976845, 3.90105343, 6.95941877, 3.38635182, 3.74867797, -1.05154741], [-3.006430e+00, -0.300254047, -5.23553085, -3.4521668, 1.62322509, -0.914543628, 1.40530622, -0.559296191, 8.971030e-01, -0.40456447]]]> : tensor<2x3x10xf32>
    %cst_0 = stablehlo.constant dense<[[[1.83169794, -0.305394143, 5.620950e+00, -3.29281878, -5.08581638], [-2.61239624, 0.852228641, 0.533337235, -3.36003137, -4.80298424], [2.82763934, -0.153263479, 1.74463308, -0.837366282, 0.708393573]], [[-1.37143505, -0.197237894, 1.53187454, -0.289681911, -0.106851235], [-4.94368601, -5.14914083, 5.56159163, -2.87240863, 5.47802544], [-0.0240368675, 3.90450144, 1.84815633, 2.80162907, -1.39572048]], [[-0.269751519, -3.02047253, -2.61705804, -1.51009655, -2.47479534], [-4.09892082, -4.46357584, -0.704815387, 3.51188827, -6.42958641], [-2.03754234, -2.5768981, 2.05221605, -2.68849659, 2.60686922]]]> : tensor<3x3x5xf32>
    return %cst, %cst_0 : tensor<2x3x10xf32>, tensor<3x3x5xf32>
  }
  func.func private @expected() -> (tensor<2x3x6xf32> {mhlo.layout_mode = "default"}) {
    %cst = stablehlo.constant dense<[[[-2.46869445, -42.8531456, -47.5611496, 35.3396187, 58.8393288, -19.3916531], [14.1035595, 30.8840351, -12.8390274, 7.56217146, -50.9943504, -64.2311096], [1.18995762, -26.7469425, 28.0454311, -1.932890e+01, -21.7423229, 45.1361809]], [[-31.2935352, -14.5582094, -34.0310211, -46.1889687, -43.3747292, -62.8998222], [-21.7234039, -11.0130482, 43.8705597, 46.2183647, 25.3334789, -47.0515099], [7.11280345, -2.58860636, 21.2787037, 23.2458115, -31.5187187, -37.9418411]]]> : tensor<2x3x6xf32>
    return %cst : tensor<2x3x6xf32>
  }
}
