// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<8x9xf64> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0 = call @inputs() : () -> tensor<8x9xf64>
    %1 = call @expected() : () -> tensor<8x9xf64>
    %2 = call @cummin(%0) : (tensor<8x9xf64>) -> tensor<8x9xf64>
    stablehlo.custom_call @check.expect_close(%2, %1) {has_side_effect = true} : (tensor<8x9xf64>, tensor<8x9xf64>) -> ()
    return %2 : tensor<8x9xf64>
  }
  func.func private @inputs() -> (tensor<8x9xf64> {mhlo.layout_mode = "default"}) {
    %cst = stablehlo.constant dense<[[1.4954931554347093, 2.3481498673079737, -2.8530131153841856, -0.43481251834748785, 5.5935191558451809, 0.59288969457514284, -1.0854881700224193, 0.87820294409668564, 3.1527128993837663], [1.5506479612212243, -2.9231314581613193, 0.21941411582932502, -0.28332269750522249, -0.46801626481401559, 1.2165032206053645, 0.6348362091297316, 2.38525283552059, -2.4289521705820722], [-4.4723309182229167, 1.6684659389325995, -2.2019400334496986, 1.8100833558319933, -0.19699691890636978, -0.85520849172569202, -0.42592664375207345, -1.235873143530325, 3.2408175410840334], [-3.2712581683709461, -5.0987380931685884, 0.38767799393141772, 2.8231713996047496, 2.324235402180336, -1.8750907646748192, 4.5412749002767043, 3.5594950786189905, 4.9283108384758858], [0.30135541450858339, 0.072950395979674634, -1.4122176771937995, -1.7430828945615309, -0.10940634539757244, -2.1613608150284831, -0.013607564553819149, 1.6330955447102335, -5.0440629785600404], [-0.42591923512788105, 1.8736974731241063, -2.5698644859966944, 1.2515494683008004, 1.6900327741500989, -4.1340735191262015, -0.35176058023101037, -1.11155874010588, 0.44099295880942591], [1.3149594065495744, -1.3521152791346243, 6.4090083156315183, -1.7090739571343589, 0.55489597180357464, 0.20608508093597594, -0.75470068466035811, 0.64488959838443827, 2.4201226427468385], [-1.2817341982532349, 2.0401290913261407, -2.4024326284569324, 2.0402544912735703, -2.2656412413843148, 2.1076609895377629, -2.1233806147757028, 4.2470117318693452, 4.2762373309765032]]> : tensor<8x9xf64>
    return %cst : tensor<8x9xf64>
  }
  func.func private @expected() -> (tensor<8x9xf64> {mhlo.layout_mode = "default"}) {
    %cst = stablehlo.constant dense<[[1.4954931554347093, 2.3481498673079737, -2.8530131153841856, -0.43481251834748785, 5.5935191558451809, 0.59288969457514284, -1.0854881700224193, 0.87820294409668564, 3.1527128993837663], [1.4954931554347093, -2.9231314581613193, -2.8530131153841856, -0.43481251834748785, -0.46801626481401559, 0.59288969457514284, -1.0854881700224193, 0.87820294409668564, -2.4289521705820722], [-4.4723309182229167, -2.9231314581613193, -2.8530131153841856, -0.43481251834748785, -0.46801626481401559, -0.85520849172569202, -1.0854881700224193, -1.235873143530325, -2.4289521705820722], [-4.4723309182229167, -5.0987380931685884, -2.8530131153841856, -0.43481251834748785, -0.46801626481401559, -1.8750907646748192, -1.0854881700224193, -1.235873143530325, -2.4289521705820722], [-4.4723309182229167, -5.0987380931685884, -2.8530131153841856, -1.7430828945615309, -0.46801626481401559, -2.1613608150284831, -1.0854881700224193, -1.235873143530325, -5.0440629785600404], [-4.4723309182229167, -5.0987380931685884, -2.8530131153841856, -1.7430828945615309, -0.46801626481401559, -4.1340735191262015, -1.0854881700224193, -1.235873143530325, -5.0440629785600404], [-4.4723309182229167, -5.0987380931685884, -2.8530131153841856, -1.7430828945615309, -0.46801626481401559, -4.1340735191262015, -1.0854881700224193, -1.235873143530325, -5.0440629785600404], [-4.4723309182229167, -5.0987380931685884, -2.8530131153841856, -1.7430828945615309, -2.2656412413843148, -4.1340735191262015, -2.1233806147757028, -1.235873143530325, -5.0440629785600404]]> : tensor<8x9xf64>
    return %cst : tensor<8x9xf64>
  }
  func.func private @cummin(%arg0: tensor<8x9xf64>) -> tensor<8x9xf64> {
    %cst = stablehlo.constant dense<0x7FF0000000000000> : tensor<f64>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f64>) -> tensor<f64>
    %1 = "stablehlo.reduce_window"(%arg0, %0) <{padding = dense<[[7, 0], [0, 0]]> : tensor<2x2xi64>, window_dimensions = array<i64: 8, 1>}> ({
    ^bb0(%arg1: tensor<f64>, %arg2: tensor<f64>):
      %2 = stablehlo.minimum %arg1, %arg2 : tensor<f64>
      stablehlo.return %2 : tensor<f64>
    }) : (tensor<8x9xf64>, tensor<f64>) -> tensor<8x9xf64>
    return %1 : tensor<8x9xf64>
  }
}
