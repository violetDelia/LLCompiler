// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<20x20xui8> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.xor %0#0, %0#1 : tensor<20x20xui8>
    stablehlo.custom_call @check.expect_eq(%2, %1) {has_side_effect = true} : (tensor<20x20xui8>, tensor<20x20xui8>) -> ()
    return %2 : tensor<20x20xui8>
  }
  func.func private @inputs() -> (tensor<20x20xui8> {mhlo.layout_mode = "default"}, tensor<20x20xui8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0x02000100010402000702050005040200000601010003020403020003020307030401000102000200010400010101010202000103050105000100030702050003080204030606020600050202000400000001010305020002020405010006000205010001050405000402030402010204000205010003030003010303050203020101010400020301000501050006000406050302060303080303040005000204040003000303050402000001030401020000000201000201040002010002000401000302020203010302020200010308030203040003010402040201050603020004040100010306000001010002020001040404010401010001010500050000000100010303000400030508000202010302040102020104030100060106020102020100000403010108000201000104010004010000050001000200030202000202010000010502050103020101000202040001020406000300050000000303010201020100000001060202010302020600010102000300000409020101040102020102010103010004000604020100"> : tensor<20x20xui8>
    %c_0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %c, %c_0 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> (tensor<20x20xui8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0x020100020107020302060601050003080103050100010306020302020102060206070201030107090304020300010201070503030701000001010207020702030D00050206070107000403020500040302030105040301020004000102050002070103010707050402040206010107050206040404030001010001010507020300010006010202010205040700020005070500020607020D0707040505030604040203020100050502010001020704020406010A0100020505000201000302050302030102010203010702000104070E01000004000701040304030304020001030000030202020402040105020300020005040703000402050301040404020201020007020203070300000901020201070704010302050403030006010402030302010504060200030E03010002030603000401020007030501000101020200000200010101070207020305030000060705000300050406000004010101070105030500030202000102030300020000070303030301020600060B020300070005030102010001000106030304020005"> : tensor<20x20xui8>
    return %c : tensor<20x20xui8>
  }
}
