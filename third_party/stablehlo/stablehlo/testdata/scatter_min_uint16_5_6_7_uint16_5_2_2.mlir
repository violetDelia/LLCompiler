// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<5x6x7xui16> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<[[[0, 1], [2, 3]], [[4, 0], [1, 2]]]> : tensor<2x2x2xi64>
    %0:2 = call @inputs() : () -> (tensor<5x6x7xui16>, tensor<5x2x2xui16>)
    %1 = call @expected() : () -> tensor<5x6x7xui16>
    %2 = "stablehlo.scatter"(%0#0, %c, %0#1) <{scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0], inserted_window_dims = [1, 2], scatter_dims_to_operand_dims = [1, 2], index_vector_dim = 2>, unique_indices = true}> ({
    ^bb0(%arg0: tensor<ui16>, %arg1: tensor<ui16>):
      %3 = stablehlo.minimum %arg0, %arg1 : tensor<ui16>
      stablehlo.return %3 : tensor<ui16>
    }) : (tensor<5x6x7xui16>, tensor<2x2x2xi64>, tensor<5x2x2xui16>) -> tensor<5x6x7xui16>
    stablehlo.custom_call @check.expect_eq(%2, %1) {has_side_effect = true} : (tensor<5x6x7xui16>, tensor<5x6x7xui16>) -> ()
    return %2 : tensor<5x6x7xui16>
  }
  func.func private @inputs() -> (tensor<5x6x7xui16> {mhlo.layout_mode = "default"}, tensor<5x2x2xui16> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0x030002000300020002000200000001000200000002000000040002000100040001000100030000000200030001000500050000000000050000000100040000000000020002000300000001000200030003000600000000000200000006000100030000000000040001000000030000000200020001000500010001000000000000000200030007000200000005000000010002000000020004000000020001000100020001000200030004000300060006000100000004000100000002000100020000000200020000000000000002000300020003000300010001000400000003000000000002000000000001000400010002000300030003000100000002000000070001000100030001000000090005000200000007000700000002000000010000000200020000000500030002000200010000000100010001000000010002000100020002000100000000000000010004000500020002000400010003000100060002000000030003000400000003000100000001000000020002000300050002000600010000000000000002000000020001000200040002000200000000000100"> : tensor<5x6x7xui16>
    %c_0 = stablehlo.constant dense<[[[1, 0], [1, 1]], [[0, 2], [0, 5]], [[2, 9], [1, 0]], [[1, 1], [4, 0]], [[2, 3], [2, 3]]]> : tensor<5x2x2xui16>
    return %c, %c_0 : tensor<5x6x7xui16>, tensor<5x2x2xui16>
  }
  func.func private @expected() -> (tensor<5x6x7xui16> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<5x6x7xui16>
    return %c : tensor<5x6x7xui16>
  }
}
