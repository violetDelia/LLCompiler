// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<20x20xi8> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0:2 = call @inputs() : () -> (tensor<20x20xi8>, tensor<20x20xi8>)
    %1 = call @expected() : () -> tensor<20x20xi8>
    %2 = stablehlo.shift_right_logical %0#0, %0#1 : tensor<20x20xi8>
    stablehlo.custom_call @check.expect_eq(%2, %1) {has_side_effect = true} : (tensor<20x20xi8>, tensor<20x20xi8>) -> ()
    return %2 : tensor<20x20xi8>
  }
  func.func private @inputs() -> (tensor<20x20xi8> {mhlo.layout_mode = "default"}, tensor<20x20xi8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<20x20xi8>
    %c_0 = stablehlo.constant dense<"0x00FD00000000020000FC00020000FE05FF04FF01FFFD05FEFF00FF00FC03000103030200F80000000006000003030A0106FB01FF010200FCFF04070001FFFFFF02FF010305FB0000FDFAFF02000002FF0404FC0102000200FC00010000FE030001FE01FEFF03FFFFFF0402FEFF02FC00FB05FC09FFFB0000FF01FE030300FCFE010302FF000400FA0200040605000103FDFEFFFDFE00FC07FFFB06000001030000070001FF0000FDFEFDFF04000000FDFF0103FFFA0500FC010300FEFC00F900000303FEFD0100FEFFFF050001FDFDFFFC0200000101FF00FF01000002FFFF010100000205010301FD0300FC05FE02020300F902F7FF010005FFFC0005FFFF0001FE00FE01FD0600FF000100010302020003000000FF00000400010408FF05FEFE0101FEFB0203FD0102FE05FCFFFDFBFB000200FD0207FF00FC00040000FD030300FFFD03FE03FE0301FFFA0201FB0200FE00FC00FD0202FF00000002FE0400030404FA000200000000FD0005FC00FEFF0104030202FF0000000002010301FF0307FF04FFFAFDFA04FE0101FDFD0000"> : tensor<20x20xi8>
    return %c, %c_0 : tensor<20x20xi8>, tensor<20x20xi8>
  }
  func.func private @expected() -> (tensor<20x20xi8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<20x20xi8>
    return %c : tensor<20x20xi8>
  }
}
