// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<20x20xi32> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0:2 = call @inputs() : () -> (tensor<20x20xi32>, tensor<1x20xi32>)
    %1 = call @expected() : () -> tensor<20x20xi32>
    %2 = stablehlo.broadcast_in_dim %0#1, dims = [0, 1] : (tensor<1x20xi32>) -> tensor<20x20xi32>
    %3 = stablehlo.shift_left %0#0, %2 : tensor<20x20xi32>
    stablehlo.custom_call @check.expect_eq(%3, %1) {has_side_effect = true} : (tensor<20x20xi32>, tensor<20x20xi32>) -> ()
    return %3 : tensor<20x20xi32>
  }
  func.func private @inputs() -> (tensor<20x20xi32> {mhlo.layout_mode = "default"}, tensor<1x20xi32> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0x00000000F9FFFFFF07000000FBFFFFFF0400000004000000010000000000000003000000000000000000000003000000000000000200000001000000000000000100000000000000000000000300000000000000060000000000000000000000030000000000000000000000FAFFFFFF02000000FEFFFFFF000000000300000000000000FFFFFFFF030000000100000000000000000000000000000006000000FBFFFFFFFFFFFFFF000000000100000002000000F9FFFFFFFDFFFFFFFFFFFFFF0600000002000000000000000100000001000000FEFFFFFF0000000003000000FFFFFFFF0100000005000000010000000000000001000000FDFFFFFF07000000FEFFFFFF000000000600000000000000FFFFFFFF020000000000000000000000000000000000000001000000030000000200000000000000060000000100000000000000FFFFFFFF0100000001000000010000000300000004000000FEFFFFFF0400000001000000FFFFFFFFFEFFFFFF0100000001000000FFFFFFFF0000000002000000FDFFFFFF02000000FFFFFFFF020000000200000005000000000000000000000002000000F8FFFFFFFEFFFFFF02000000FCFFFFFFFAFFFFFFFFFFFFFF02000000010000000100000005000000FCFFFFFFFAFFFFFF010000000000000000000000FFFFFFFF00000000000000000000000000000000FEFFFFFFFCFFFFFF0300000001000000FDFFFFFF00000000FDFFFFFFFDFFFFFF02000000FCFFFFFFF9FFFFFFFEFFFFFF0000000000000000FFFFFFFFFDFFFFFFFDFFFFFFFAFFFFFF0300000008000000FFFFFFFF02000000FFFFFFFF03000000FEFFFFFFFFFFFFFF03000000FBFFFFFFFDFFFFFF01000000FEFFFFFFF9FFFFFFFFFFFFFFFCFFFFFF010000000000000002000000FEFFFFFFFFFFFFFF01000000FFFFFFFFFFFFFFFF00000000FFFFFFFF02000000FEFFFFFFFFFFFFFF0000000000000000FEFFFFFF0100000000000000FCFFFFFFFAFFFFFFFCFFFFFF010000000000000000000000FDFFFFFF00000000FEFFFFFFFFFFFFFF05000000FCFFFFFFFCFFFFFF040000000000000000000000FFFFFFFFFFFFFFFF040000000000000005000000FFFFFFFFFFFFFFFFFFFFFFFF01000000FCFFFFFFFEFFFFFF00000000FDFFFFFF0100000006000000FCFFFFFF030000000000000004000000FEFFFFFF02000000FDFFFFFF04000000020000000200000000000000FDFFFFFF03000000020000000000000000000000FCFFFFFFFCFFFFFF0000000001000000FFFFFFFF07000000FEFFFFFF01000000FEFFFFFFFFFFFFFF03000000FFFFFFFFFCFFFFFFFBFFFFFFFEFFFFFF0000000001000000FFFFFFFF000000000100000000000000FFFFFFFFFEFFFFFFFCFFFFFF0100000007000000FDFFFFFFFEFFFFFF0000000000000000FEFFFFFF000000000500000000000000FEFFFFFF0100000002000000FFFFFFFF04000000030000000000000004000000000000000000000002000000FCFFFFFFFBFFFFFFFEFFFFFF04000000020000000300000001000000FBFFFFFF0200000004000000FDFFFFFF0400000000000000FDFFFFFFFEFFFFFFFEFFFFFFFFFFFFFFFEFFFFFF01000000000000000100000005000000FDFFFFFF00000000000000000400000002000000010000000700000000000000FFFFFFFF000000000500000003000000FCFFFFFF02000000FEFFFFFFFCFFFFFF0000000000000000FCFFFFFF050000000100000000000000000000000200000000000000FAFFFFFFFDFFFFFF01000000FEFFFFFF0200000000000000FFFFFFFF04000000060000000000000005000000010000000200000005000000000000000000000006000000FEFFFFFF0200000000000000010000000100000000000000FFFFFFFF08000000FFFFFFFF0100000003000000FEFFFFFF000000000200000000000000020000000000000000000000020000000100000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFF0000000000000000000000000400000000000000000000000000000001000000FEFFFFFF00000000FCFFFFFF04000000FEFFFFFF0000000003000000FEFFFFFFFBFFFFFF0000000001000000050000000300000002000000FDFFFFFF00000000FFFFFFFF01000000FDFFFFFF00000000010000000000000000000000FFFFFFFF04000000FEFFFFFF0400000002000000FBFFFFFF00000000010000000000000002000000"> : tensor<20x20xi32>
    %c_0 = stablehlo.constant dense<[[-2, -3, -4, -4, -2, 0, 0, 0, 0, 3, -3, -1, 0, -2, 3, -1, -1, -7, 0, 4]]> : tensor<1x20xi32>
    return %c, %c_0 : tensor<20x20xi32>, tensor<1x20xi32>
  }
  func.func private @expected() -> (tensor<20x20xi32> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<20x20xi32>
    return %c : tensor<20x20xi32>
  }
}
