// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<20x20xui16> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0 = call @inputs() : () -> tensor<20x20xui16>
    %1 = call @expected() : () -> tensor<20x20xui16>
    %c = stablehlo.constant dense<0> : tensor<ui16>
    %2 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui16>) -> tensor<20x20xui16>
    %3 = stablehlo.compare  EQ, %0, %2,  UNSIGNED : (tensor<20x20xui16>, tensor<20x20xui16>) -> tensor<20x20xi1>
    %c_0 = stablehlo.constant dense<0> : tensor<ui16>
    %4 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui16>) -> tensor<20x20xui16>
    %c_1 = stablehlo.constant dense<1> : tensor<ui16>
    %5 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui16>) -> tensor<20x20xui16>
    %6 = stablehlo.select %3, %4, %5 : tensor<20x20xi1>, tensor<20x20xui16>
    stablehlo.custom_call @check.expect_eq(%6, %1) {has_side_effect = true} : (tensor<20x20xui16>, tensor<20x20xui16>) -> ()
    return %6 : tensor<20x20xui16>
  }
  func.func private @inputs() -> (tensor<20x20xui16> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<20x20xui16>
    return %c : tensor<20x20xui16>
  }
  func.func private @expected() -> (tensor<20x20xui16> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<20x20xui16>
    return %c : tensor<20x20xui16>
  }
}
