// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_main attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main() -> (tensor<20x20xui8> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.maximum %0#0, %0#1 : tensor<20x20xui8>
    stablehlo.custom_call @check.expect_eq(%2, %1) {has_side_effect = true} : (tensor<20x20xui8>, tensor<20x20xui8>) -> ()
    return %2 : tensor<20x20xui8>
  }
  func.func private @inputs() -> (tensor<20x20xui8> {mhlo.layout_mode = "default"}, tensor<20x20xui8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0xtensor<20x20xui8>
    %c_0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %c, %c_0 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> (tensor<20x20xui8> {mhlo.layout_mode = "default"}) {
    %c = stablehlo.constant dense<"0x02020201050103000303010202040105060403080301050105000302030201030004010304040104010203030205040802010104050101070300050507010302030305020401030402040307060302010601030102030303010203020001010305020201020502050502050604030103050403020102020306040307040104040304060501020200050305030102010104010402040202030401030201020305030202010204040103060205030302050302020203000403000306010503050501070401060404000202010504020102050107010703010202040301040405010101000506020304010301040305070001020102030202030500010500010102010104010602040205010200030007010005040301030103040202060303010204020302050106050201040502020104030005020002020503020204020203010402060602030702020204020102060501040400070203000304050104030504020104030105040200050507030303020602030201030203040400050602010103030305040101080200030006050100"> : tensor<20x20xui8>
    return %c : tensor<20x20xui8>
  }
}
