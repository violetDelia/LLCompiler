module attributes {builtin.gloabal_layout = "NCHW"} {
  func.func @main(%arg0: i64, %arg1: i64, %arg2: tensor<?x3x?x?xf32>) -> tensor<?x3x?x2xf32> {
    %0 = "llh.constant"() <{value = dense<2> : tensor<1xi64>}> : () -> tensor<1xi64>
    %1 = "llh.constant"() <{value = 2 : i64}> : () -> i64
    %2 = "llh.constant"() <{value = dense<5.33333302> : tensor<1xf32>}> : () -> tensor<1xf32>
    %3 = "llh.constant"() <{value = 5.33333302 : f32}> : () -> f32
    %4 = "llh.constant"() <{value = dense<"0xtensor<10x3x5x5xf32>}> : () -> tensor<10x3x5x5xf32>
    %5 = "llh.constant"() <{value = dense<[-0.0320920311, 0.0433704928, 9.360910e-02, 0.0713069215, -0.0478429124, -0.00947392825, -0.0204839315, -0.00776357297, -0.0055672545, 0.0398259647]> : tensor<10xf32>}> : () -> tensor<10xf32>
    %6 = "llh.constant"() <{value = dense<"0xtensor<3x10x5x5xf32>}> : () -> tensor<3x10x5x5xf32>
    %7 = "llh.constant"() <{value = dense<[-0.0411284156, -0.0327385403, 0.0489548258]> : tensor<3xf32>}> : () -> tensor<3xf32>
    %8 = "llh.constant"() <{value = dense<"0x6C6E06BC968E29BD716186BD94C9F7BC2669B8BC101CE6BC8666BABD1997B13B3CC888BDA18D7EBDA33F17BCEED88A3DEA2BC23B41FF43BC82B6353D7C73AA3D390FA83DB741BBBD021CA6BD8E9C73BCC0E1593BAD8CF23CE3BD6ABDBBB9CABB12F39E3D0F6B2C3D32AF833B32C51A3D0F88A73CEFA02DBD5C3F0EBDAB4B223D00CAA73D6ADB1DBD3B05B6BD3BB207BD677CDABB6DEB2D3DDF6B103DDFC89BBDB42F03BDD4867F3CCE7595BD828C77BD7EAF703D50D5BD3D27B583BCA7472F3DEA3A673C54B62DBD728A6A3CB065923D95F3C53BBC253C3CE86B31BCAB6090BD06987FBD3E43933DD2177A3DA25344BD5E5037BDE7C219BD329435BDAA602EBDD6CBC8BB25B870BD42014ABD3BBD72BDBB29BFBCC1EA52BD9F7A853CF07E24BD5F47AD3B03B99E3D99EC9CBCBF2DB23C79F641BDF1B29DBD1EA8B1BCCF1DB33D31941D3C983B493DD005383DCD58A8BD0D5FE7BC3E5FB53C41D00D3DE423ABBDBD2C91BD90E14ABDD7F1A6BD58699F3DF88BB8BD51BA4DBDDFEE263DF77A493DBF3524BD11B3803CE0AFD23C22E7B33D3A36BF3D1029BABCC6B78D3C1706A0BD869595BD4D43823D957C85BD1BCBF2BCDD435FBDF8E4E8BBBDC5A93DE0DD0C3D3D21103D0B06A63D3CEF8B3DD2E7903C301289BBE8A1903D3A64A23D9D6E39BCEE98CABB74CD0FBDE82663BD0D5387BDA78A21BD60F2993D348BA23CF2C8303DDFB540BD8E46B63B4B6FB0BD0D257D3D545C61BD0BFBF83C09C607BD5DC2863DC813FD3C2C45983C1AA8853C55137EBDB0115DBDC2444E3D7308013D75B739BC808F0A3D37F4B03D32428C3DF81995BB50D36F3CF678863D9DF096BDE88A1A3D2D3D6CBD21C988BD1C372C3C2FBA883C64F95F3DA20F8D3BF37723BD6D1892BD62FB9FBDE73E153D80FEF8BC719AC23DFE8E82BDB6D0DF3BACF3BC3D1C3BA1BB519837BDB9B2B8BDD29B09BCABD41ABDD95DBC3BC4F1073BF1335ABDA753B9BD7FD858BD22CCC03D93F8F53C6D47CDBB969FC13DB0B8F43B55550D3DF7D22ABDA42B8D3DA39839BD1F70BABD21AA36BD66DE113DF312B43DF7D5973D6FB5C9BB99AF1CBCF3F1B3BD017CB5BD417D173D28F0B53DA691A5BD6F39933DB62D23BD7A974CBD65D9473D2924EE3CCDD3183D1C729EBB9B1A9DBD9FB0BFBD972F433CA91497BC0309113DDF0F82BD2CC1AFBD1F48D33BDDB3823DE1A0803B2D4861BD7B2FA8BDD375BCBD9295363DA43DA73D"> : tensor<2x110xf32>}> : () -> tensor<2x110xf32>
    %9 = "llh.constant"() <{value = dense<[0.00151246076, -0.0931972488]> : tensor<2xf32>}> : () -> tensor<2xf32>
    %10 = "llh.torch_symbolic_int"() <{sym_name = "s0"}> : () -> i64
    %11 = "llh.torch_symbolic_int"() <{sym_name = "s2"}> : () -> i64
    %12 = "llh.conv_bias"(%arg2, %4, %5) <{dilation = array<i64: 5, 5>, group = 1 : i64, kernel_shape = array<i64: 5, 5>, pad = array<i64: 2, 2, 2, 2>, stride = array<i64: 2, 2>}> : (tensor<?x3x?x?xf32>, tensor<10x3x5x5xf32>, tensor<10xf32>) -> tensor<?x10x?x?xf32>
    %13 = "llh.add"(%12, %12) : (tensor<?x10x?x?xf32>, tensor<?x10x?x?xf32>) -> tensor<?x10x?x?xf32>
    %14 = "llh.div"(%12, %2) : (tensor<?x10x?x?xf32>, tensor<1xf32>) -> tensor<?x10x?x?xf32>
    %15 = "llh.add"(%14, %13) : (tensor<?x10x?x?xf32>, tensor<?x10x?x?xf32>) -> tensor<?x10x?x?xf32>
    %16 = "llh.mul"(%14, %14) : (tensor<?x10x?x?xf32>, tensor<?x10x?x?xf32>) -> tensor<?x10x?x?xf32>
    %17 = "llh.add"(%15, %16) : (tensor<?x10x?x?xf32>, tensor<?x10x?x?xf32>) -> tensor<?x10x?x?xf32>
    %18 = "llh.add"(%17, %13) : (tensor<?x10x?x?xf32>, tensor<?x10x?x?xf32>) -> tensor<?x10x?x?xf32>
    %19 = "llh.conv_bias"(%18, %6, %7) <{dilation = array<i64: 1, 1>, group = 1 : i64, kernel_shape = array<i64: 5, 5>, pad = array<i64: 5, 5, 5, 5>, stride = array<i64: 1, 1>}> : (tensor<?x10x?x?xf32>, tensor<3x10x5x5xf32>, tensor<3xf32>) -> tensor<?x3x?x?xf32>
    %20 = "llh.mul"(%19, %19) : (tensor<?x3x?x?xf32>, tensor<?x3x?x?xf32>) -> tensor<?x3x?x?xf32>
    %21 = "llh.add"(%19, %20) : (tensor<?x3x?x?xf32>, tensor<?x3x?x?xf32>) -> tensor<?x3x?x?xf32>
    %22 = "llh.div"(%19, %0) : (tensor<?x3x?x?xf32>, tensor<1xi64>) -> tensor<?x3x?x?xf32>
    %23 = "llh.add"(%21, %22) : (tensor<?x3x?x?xf32>, tensor<?x3x?x?xf32>) -> tensor<?x3x?x?xf32>
    %24 = "llh.transpose"(%8) <{perms = array<i64: 1, 0>}> : (tensor<2x110xf32>) -> tensor<110x2xf32>
    %25 = "llh.matmul"(%23, %24) : (tensor<?x3x?x?xf32>, tensor<110x2xf32>) -> tensor<?x3x?x2xf32>
    %26 = "llh.add"(%25, %9) : (tensor<?x3x?x2xf32>, tensor<2xf32>) -> tensor<?x3x?x2xf32>
    return %26 : tensor<?x3x?x2xf32>
  }
}

